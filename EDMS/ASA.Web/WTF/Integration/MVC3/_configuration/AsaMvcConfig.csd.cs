//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASA.Web.WTF.Integration.MVC3
{
    
    
    /// <summary>
    /// The ASAIntegration Configuration Section.
    /// </summary>
    public partial class ASAIntegration : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the ASAIntegration Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ASAIntegrationSectionName = "asaIntegration";
        
        /// <summary>
        /// Gets the ASAIntegration instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public static global::ASA.Web.WTF.Integration.MVC3.ASAIntegration Instance
        {
            get
            {
                return ((global::ASA.Web.WTF.Integration.MVC3.ASAIntegration)(global::System.Configuration.ConfigurationManager.GetSection(global::ASA.Web.WTF.Integration.MVC3.ASAIntegration.ASAIntegrationSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.ASAIntegration.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::ASA.Web.WTF.Integration.MVC3.ASAIntegration.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Startup Property
        /// <summary>
        /// The XML name of the <see cref="Startup"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string StartupPropertyName = "startup";
        
        /// <summary>
        /// Gets or sets the Startup.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Startup.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.ASAIntegration.StartupPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ASA.Web.WTF.Integration.MVC3.Startup Startup
        {
            get
            {
                return ((global::ASA.Web.WTF.Integration.MVC3.Startup)(base[global::ASA.Web.WTF.Integration.MVC3.ASAIntegration.StartupPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.ASAIntegration.StartupPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ASA.Web.WTF.Integration.MVC3
{
    
    
    /// <summary>
    /// The Startup Configuration Element.
    /// </summary>
    public partial class Startup : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region EnablePreload Property
        /// <summary>
        /// The XML name of the <see cref="EnablePreload"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string EnablePreloadPropertyName = "enablePreload";
        
        /// <summary>
        /// Gets or sets the EnablePreload.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The EnablePreload.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.Startup.EnablePreloadPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool EnablePreload
        {
            get
            {
                return ((bool)(base[global::ASA.Web.WTF.Integration.MVC3.Startup.EnablePreloadPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.Startup.EnablePreloadPropertyName] = value;
            }
        }
        #endregion
        
        #region PreloadStoreAuth Property
        /// <summary>
        /// The XML name of the <see cref="PreloadStoreAuth"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string PreloadStoreAuthPropertyName = "preloadStoreAuth";
        
        /// <summary>
        /// Gets or sets the PreloadStoreAuth.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The PreloadStoreAuth.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.Startup.PreloadStoreAuthPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool PreloadStoreAuth
        {
            get
            {
                return ((bool)(base[global::ASA.Web.WTF.Integration.MVC3.Startup.PreloadStoreAuthPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.Startup.PreloadStoreAuthPropertyName] = value;
            }
        }
        #endregion
        
        #region ContentPreload Property
        /// <summary>
        /// The XML name of the <see cref="ContentPreload"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ContentPreloadPropertyName = "contentPreload";
        
        /// <summary>
        /// Gets or sets the ContentPreload.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The ContentPreload.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.Startup.ContentPreloadPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ASA.Web.WTF.Integration.MVC3.ContentPreload ContentPreload
        {
            get
            {
                return ((global::ASA.Web.WTF.Integration.MVC3.ContentPreload)(base[global::ASA.Web.WTF.Integration.MVC3.Startup.ContentPreloadPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.Startup.ContentPreloadPropertyName] = value;
            }
        }
        #endregion
        
        #region MemberContextPreload Property
        /// <summary>
        /// The XML name of the <see cref="MemberContextPreload"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string MemberContextPreloadPropertyName = "memberContextPreload";
        
        /// <summary>
        /// Gets or sets the MemberContextPreload.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The MemberContextPreload.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.Startup.MemberContextPreloadPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload MemberContextPreload
        {
            get
            {
                return ((global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload)(base[global::ASA.Web.WTF.Integration.MVC3.Startup.MemberContextPreloadPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.Startup.MemberContextPreloadPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ASA.Web.WTF.Integration.MVC3
{
    
    
    /// <summary>
    /// A collection of ContentItem instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::ASA.Web.WTF.Integration.MVC3.ContentItem), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::ASA.Web.WTF.Integration.MVC3.ContentPreload.ContentItemPropertyName)]
    public partial class ContentPreload : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ContentItemPropertyName = "contentItem";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::ASA.Web.WTF.Integration.MVC3.ContentPreload.ContentItemPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::ASA.Web.WTF.Integration.MVC3.ContentPreload.ContentItemPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::ASA.Web.WTF.Integration.MVC3.ContentItem)(element)).RequestPath;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::ASA.Web.WTF.Integration.MVC3.ContentItem();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ASA.Web.WTF.Integration.MVC3.ContentItem this[int index]
        {
            get
            {
                return ((global::ASA.Web.WTF.Integration.MVC3.ContentItem)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> with the specified key.
        /// </summary>
        /// <param name="requestPath">The key of the <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ASA.Web.WTF.Integration.MVC3.ContentItem this[object requestPath]
        {
            get
            {
                return ((global::ASA.Web.WTF.Integration.MVC3.ContentItem)(base.BaseGet(requestPath)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="contentItem">The <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Add(global::ASA.Web.WTF.Integration.MVC3.ContentItem contentItem)
        {
            base.BaseAdd(contentItem);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="contentItem">The <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Remove(global::ASA.Web.WTF.Integration.MVC3.ContentItem contentItem)
        {
            base.BaseRemove(this.GetElementKey(contentItem));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ASA.Web.WTF.Integration.MVC3.ContentItem GetItemAt(int index)
        {
            return ((global::ASA.Web.WTF.Integration.MVC3.ContentItem)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> with the specified key.
        /// </summary>
        /// <param name="requestPath">The key of the <see cref="global::ASA.Web.WTF.Integration.MVC3.ContentItem"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ASA.Web.WTF.Integration.MVC3.ContentItem GetItemByKey(string requestPath)
        {
            return ((global::ASA.Web.WTF.Integration.MVC3.ContentItem)(base.BaseGet(((object)(requestPath)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Enabled Property
        /// <summary>
        /// The XML name of the <see cref="Enabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string EnabledPropertyName = "enabled";
        
        /// <summary>
        /// Gets or sets the Enabled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Enabled.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.ContentPreload.EnabledPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool Enabled
        {
            get
            {
                return ((bool)(base[global::ASA.Web.WTF.Integration.MVC3.ContentPreload.EnabledPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.ContentPreload.EnabledPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ASA.Web.WTF.Integration.MVC3
{
    
    
    /// <summary>
    /// The ContentItem Configuration Element.
    /// </summary>
    public partial class ContentItem : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region RequestPath Property
        /// <summary>
        /// The XML name of the <see cref="RequestPath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string RequestPathPropertyName = "requestPath";
        
        /// <summary>
        /// Gets or sets the RequestPath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The RequestPath.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.ContentItem.RequestPathPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string RequestPath
        {
            get
            {
                return ((string)(base[global::ASA.Web.WTF.Integration.MVC3.ContentItem.RequestPathPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.ContentItem.RequestPathPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ASA.Web.WTF.Integration.MVC3
{
    
    
    /// <summary>
    /// A collection of ExtendedOption instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::ASA.Web.WTF.Integration.MVC3.ExtendedOption), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.ExtendedOptionPropertyName)]
    public partial class MemberContextPreload : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ExtendedOptionPropertyName = "add";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override string ElementName
        {
            get
            {
                return global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.ExtendedOptionPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.ExtendedOptionPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::ASA.Web.WTF.Integration.MVC3.ExtendedOption)(element)).Key;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::ASA.Web.WTF.Integration.MVC3.ExtendedOption();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ASA.Web.WTF.Integration.MVC3.ExtendedOption this[int index]
        {
            get
            {
                return ((global::ASA.Web.WTF.Integration.MVC3.ExtendedOption)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ASA.Web.WTF.Integration.MVC3.ExtendedOption this[object key]
        {
            get
            {
                return ((global::ASA.Web.WTF.Integration.MVC3.ExtendedOption)(base.BaseGet(key)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Add(global::ASA.Web.WTF.Integration.MVC3.ExtendedOption add)
        {
            base.BaseAdd(add);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="add">The <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public void Remove(global::ASA.Web.WTF.Integration.MVC3.ExtendedOption add)
        {
            base.BaseRemove(this.GetElementKey(add));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ASA.Web.WTF.Integration.MVC3.ExtendedOption GetItemAt(int index)
        {
            return ((global::ASA.Web.WTF.Integration.MVC3.ExtendedOption)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::ASA.Web.WTF.Integration.MVC3.ExtendedOption"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public global::ASA.Web.WTF.Integration.MVC3.ExtendedOption GetItemByKey(string key)
        {
            return ((global::ASA.Web.WTF.Integration.MVC3.ExtendedOption)(base.BaseGet(((object)(key)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Enabled Property
        /// <summary>
        /// The XML name of the <see cref="Enabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string EnabledPropertyName = "enabled";
        
        /// <summary>
        /// Gets or sets the Enabled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Enabled.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.EnabledPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool Enabled
        {
            get
            {
                return ((bool)(base[global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.EnabledPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.EnabledPropertyName] = value;
            }
        }
        #endregion
        
        #region TestUserLoad Property
        /// <summary>
        /// The XML name of the <see cref="TestUserLoad"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string TestUserLoadPropertyName = "testUserLoad";
        
        /// <summary>
        /// Gets or sets the TestUserLoad.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The TestUserLoad.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.TestUserLoadPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public bool TestUserLoad
        {
            get
            {
                return ((bool)(base[global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.TestUserLoadPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.TestUserLoadPropertyName] = value;
            }
        }
        #endregion
        
        #region TestUserId Property
        /// <summary>
        /// The XML name of the <see cref="TestUserId"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string TestUserIdPropertyName = "testUserId";
        
        /// <summary>
        /// Gets or sets the TestUserId.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The TestUserId.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.TestUserIdPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string TestUserId
        {
            get
            {
                return ((string)(base[global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.TestUserIdPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.MemberContextPreload.TestUserIdPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace ASA.Web.WTF.Integration.MVC3
{
    
    
    /// <summary>
    /// The ExtendedOption Configuration Element.
    /// </summary>
    public partial class ExtendedOption : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Key Property
        /// <summary>
        /// The XML name of the <see cref="Key"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string KeyPropertyName = "key";
        
        /// <summary>
        /// Gets or sets the Key.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Key.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.ExtendedOption.KeyPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public string Key
        {
            get
            {
                return ((string)(base[global::ASA.Web.WTF.Integration.MVC3.ExtendedOption.KeyPropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.ExtendedOption.KeyPropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::ASA.Web.WTF.Integration.MVC3.ExtendedOption.ValuePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Value
        {
            get
            {
                return ((string)(base[global::ASA.Web.WTF.Integration.MVC3.ExtendedOption.ValuePropertyName]));
            }
            set
            {
                base[global::ASA.Web.WTF.Integration.MVC3.ExtendedOption.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
