<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2001, 2012, Oracle and/or its affiliates. All rights reserved.
  ~ Oracle and Java are registered trademarks of Oracle and/or its
  ~ affiliates. Other names may be trademarks of their respective owners.
  ~ UNIX is a registered trademark of The Open Group.
  ~
  ~ This software and related documentation are provided under a license
  ~ agreement containing restrictions on use and disclosure and are
  ~ protected by intellectual property laws. Except as expressly permitted
  ~ in your license agreement or allowed by law, you may not use, copy,
  ~ reproduce, translate, broadcast, modify, license, transmit, distribute,
  ~ exhibit, perform, publish, or display any part, in any form, or by any
  ~ means. Reverse engineering, disassembly, or decompilation of this
  ~ software, unless required by law for interoperability, is prohibited.
  ~ The information contained herein is subject to change without notice
  ~ and is not warranted to be error-free. If you find any errors, please
  ~ report them to us in writing.
  ~ U.S. GOVERNMENT END USERS: Oracle programs, including any operating
  ~ system, integrated software, any programs installed on the hardware,
  ~ and/or documentation, delivered to U.S. Government end users are
  ~ "commercial computer software" pursuant to the applicable Federal
  ~ Acquisition Regulation and agency-specific supplemental regulations.
  ~ As such, use, duplication, disclosure, modification, and adaptation
  ~ of the programs, including any operating system, integrated software,
  ~ any programs installed on the hardware, and/or documentation, shall be
  ~ subject to license terms and license restrictions applicable to the
  ~ programs. No other rights are granted to the U.S. Government.
  ~ This software or hardware is developed for general use in a variety
  ~ of information management applications. It is not developed or
  ~ intended for use in any inherently dangerous applications, including
  ~ applications that may create a risk of personal injury. If you use
  ~ this software or hardware in dangerous applications, then you shall
  ~ be responsible to take all appropriate fail-safe, backup, redundancy,
  ~ and other measures to ensure its safe use. Oracle Corporation and its
  ~ affiliates disclaim any liability for any damages caused by use of this
  ~ software or hardware in dangerous applications.
  ~ This software or hardware and documentation may provide access to or
  ~ information on content, products, and services from third parties.
  ~ Oracle Corporation and its affiliates are not responsible for and
  ~ expressly disclaim all warranties of any kind with respect to
  ~ third-party content, products, and services. Oracle Corporation and
  ~ its affiliates will not be responsible for any loss, costs, or damages
  ~ incurred due to your access to or use of third-party content, products,
  ~ or services.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

  <!--
    ########################################################################
    # BEAN: seoUrlFormatter
    #
    # This is the SEO URL formatter, which is responsible for
    # transforming UrlState objects into URL strings. 
    #
  -->
    <bean id="seoUrlFormatter" class="com.endeca.soleng.urlformatter.seo.SeoUrlFormatter">

    <property name="defaultEncoding">
      <value>UTF-8</value>
    </property>

    <property name="pathSeparatorToken">
      <value>_</value>
    </property>

    <property name="pathKeyValueSeparator">
      <value>-</value>
    </property>

    <property name="pathParamKeys">
      <list>
        <value>R</value>
        <value>A</value>
        <value>N</value>
      </list>
    </property>

    <property name="navStateFormatter">
      <ref bean="navStateFormatter"/>
    </property>

    <property name="ERecFormatter">
      <ref bean="erecFormatter"/>
    </property>

    <property name="aggrERecFormatter">
      <ref bean="aggrERecFormatter"/>
    </property>

    <property name="navStateCanonicalizer">
      <ref bean="navStateCanonicalizer"/>
    </property>

    <property name="urlParamEncoders">
      <list>
        <ref bean="N-paramEncoder"/>
      </list>
    </property>

  </bean>
  
  <!--
    ########################################################################
    # BEAN: navStateFormatter
    #
    # This formatter is used to transform a navigation state (DimLocationList)
    # into a sequence of miscellaneous URL strings.
    #
  -->
  <bean id="navStateFormatter" class="com.endeca.soleng.urlformatter.seo.SeoNavStateFormatter">

    <property name="useDimensionNameAsKey">
      <value>true</value>
    </property>

    <property name="dimLocationFormatters">
      <list>
	    <ref bean="contentTypeFormatter"/>
        <ref bean="collectionFormatter"/>    
      </list>
    </property>

  </bean>


  <!--
    ########################################################################
    # BEAN: navStateCanonicalizer
    #
    # This object is used to canonicalize the navigation state before
    # formatting a specified URL.
    #
  -->
  <bean name="navStateCanonicalizer" class="com.endeca.soleng.urlformatter.seo.SeoNavStateCanonicalizer">

    <property name="sortByName">
      <value>true</value>
    </property>

    <property name="sortByDimension">
      <value>true</value>
    </property>

    <property name="ascending">
      <value>true</value>
    </property>

    <property name="ignoreCase">
      <value>false</value>
    </property>

  </bean>


  <!--
    ########################################################################
    # BEAN: N-paramEncoder
    #
    # This encoder is used to encode and decode the N parameter.
    #
  -->
  <bean name="N-paramEncoder" class="com.endeca.soleng.urlformatter.seo.SeoNavStateEncoder">
    <property name="paramKey">
      <value>N</value>
    </property>
  </bean>



  <!--
    ########################################################################
    # BEAN: erecFormatter
    #
    # This formatter is used to transform ERec objects into a sequence of
    # miscellaneous URL strings.
    #
  -->
<bean id="erecFormatter" class="com.endeca.soleng.urlformatter.seo.SeoERecFormatter">

    <property name="dimLocationFormatters">
      <list>
	    <ref bean="contentTypeFormatter"/>     
      </list>
    </property>

    <property name="useDimensionNameAsKey">
      <value>true</value>
    </property>

    <property name="propertyKeys">
      <list>
        <value>sys_title</value>
      </list>
    </property>

    <property name="propertyFormatter">
      <ref bean="defaultStringFormatterChain"/>
    </property>

</bean>

  <!--
    ########################################################################
    # BEAN: aggrERecFormatter
    #
    # This formatter is used to transform AggrERec objects into a sequence of
    # miscellaneous URL strings.
    #
  -->
  <bean id="aggrERecFormatter" class="com.endeca.soleng.urlformatter.seo.SeoAggrERecFormatter">

    <property name="useDimensionNameAsKey">
      <value>true</value>
    </property>

    <property name="dimLocationFormatters">
      <list>
        <ref bean="contentTypeFormatter"/>        
      </list>
    </property>

    <property name="propertyKeys">
      <list>
        <value>sys_title</value>
      </list>
    </property>

    <property name="propertyFormatter">
      <ref bean="defaultStringFormatterChain"/>
    </property>

  </bean>


  <!--
    ########################################################################
    # BEAN: collectionFormatter
    #
    # Formatter for DimLocation objects from the product.category dimension.
    #
  -->
  <bean id="collectionFormatter"
      class="com.endeca.soleng.urlformatter.seo.SeoDimLocationFormatter">

    <property name="key">
      <value>Collection</value>
    </property>

    <property name="appendRoot">
      <value>false</value>
    </property>

    <property name="appendAncestors">
      <value>true</value>
    </property>

    <property name="appendDescriptor">
      <value>true</value>
    </property>

    <property name="separator">
      <value>/</value>
    </property>

    <property name="rootStringFormatter">

      <bean class="com.endeca.soleng.urlformatter.seo.StringFormatterChain">
        <property name="stringFormatters">
          <list>
            <!-- replace 'product.category' with 'Category' -->
            <bean class="com.endeca.soleng.urlformatter.seo.RegexStringFormatter">
              <property name="pattern">
                <value>Collection</value>
              </property>

              <property name="replacement">
                <value>Collection</value>
              </property>

              <property name="replaceAll">
                <value>false</value>
              </property>
            </bean>

            <!-- execute the default string formatter chain -->
            <ref bean="defaultStringFormatterChain"/>
          </list>
        </property>
      </bean>
    </property>

    <property name="dimValStringFormatter">
      <ref bean="defaultStringFormatterChain"/>
    </property>

  </bean>
  

  <!--
    ########################################################################
    # BEAN: contentTypeFormatter
    #
    # Formatter for DimLocation objects from the product.brand.name dimension.
    #
  -->
  <bean id="contentTypeFormatter"
      class="com.endeca.soleng.urlformatter.seo.SeoDimLocationFormatter">

    <property name="key">
      <value>ContentTypes</value>
    </property>

    <property name="appendRoot">
      <value>false</value>
    </property>

    <property name="appendAncestors">
      <value>false</value>
    </property>

    <property name="appendDescriptor">
      <value>true</value>
    </property>

    <property name="separator">
      <value>-</value>
    </property>

    <property name="rootStringFormatter">
      <bean class="com.endeca.soleng.urlformatter.seo.StringFormatterChain">
        <property name="stringFormatters">
          <list>
            <!-- replace 'product.brand.name' with 'Brand' -->
            <bean class="com.endeca.soleng.urlformatter.seo.RegexStringFormatter">
              <property name="pattern">
                <value>ContentTypes</value>
              </property>

              <property name="replacement">
                <value>ContentTypes</value>
              </property>

              <property name="replaceAll">
                <value>false</value>
              </property>
            </bean>

            <!-- execute the default string formatter chain -->
            <ref bean="defaultStringFormatterChain"/>
          </list>
        </property>
      </bean>
    </property>

    <property name="dimValStringFormatter">
      <ref bean="defaultStringFormatterChain"/>
    </property>

  </bean>
  
  

    <!--
    ########################################################################
    # BEAN: defaultStringFormatterChain
    #
    # This is the default string formatter chain. It is used when
    # formatting miscellaneous URL strings.
    #
  -->
  <bean name="defaultStringFormatterChain"
      class="com.endeca.soleng.urlformatter.seo.StringFormatterChain">

    <property name="stringFormatters">
      <list>
        <!--
          ########################################################################
          # replace all non-word character sequences with a single '-'
          #
        -->
        <bean class="com.endeca.soleng.urlformatter.seo.RegexStringFormatter">
          <property name="pattern">
            <value><![CDATA[[\W_&&[^\u00C0-\u00FF]]+]]></value>
          </property>

          <property name="replacement">
            <value>-</value>
          </property>

          <property name="replaceAll">
            <value>true</value>
          </property>
        </bean>

        <!--
          ########################################################################
          # trim leading and trailing '-' characters (if any)
          #
        -->
        <bean class="com.endeca.soleng.urlformatter.seo.RegexStringFormatter">
          <property name="pattern">
            <value><![CDATA[^-?([\w\u00C0-\u00FF][\w-\u00C0-\u00FF]*[\w\u00C0-\u00FF])-?$]]></value>
          </property>

          <property name="replacement">
            <value>$1</value>
          </property>

          <property name="replaceAll">
            <value>false</value>
          </property>
        </bean>

        <!--
          ########################################################################
          # lowercase the remaining string
          #
        -->
        <!--
        <bean class="com.endeca.soleng.urlformatter.seo.LowerCaseStringFormatter"/>
        -->

        <!--
          ########################################################################
          # URL encode the remaining string
          #
        -->
        <!--
        <bean class="com.endeca.soleng.urlformatter.seo.UrlEncodedStringFormatter"/>
        -->

      </list>
    </property>
  </bean>

</beans>